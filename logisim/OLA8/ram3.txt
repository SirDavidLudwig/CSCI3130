; Triangular Number Sequence
; David Ludwig
; Expected output: 1, 3, 6, 10, 15, 21, 28, 36, 45, 55...

; Program entry
JMP main 				; Jump to main

; Variables
triangleNum: 0			; Current triangle number
loops: A				; Number of loops (10)

; Main program
main:
	; Setup
	INC 				; Set ACC to 1
	MVAC 				; Move ACC to R

	; Start the loop
	jmp loop 			; Go to the loop

; Program loop
loop:
	
	; Calculate the next triangle number
	LDAC triangleNum
	ADD 				; Add R to the ACC
	STAC triangleNum	; Store the new triangle number
	OUT 				; Display the new triangle number
	MOVR 				; Move the tringale increment into ACC
	INC 				; Increment ACC
	MVAC 				; Move the next triangle increment into R

	; Decrement the loop index
	LDAC loops 			; Load the current loop index
	NOT 				; Start 2's complement
	INC 				; Finish 2's complement
	NOT 				; Negate the loop index, now 1 less than it was.
	STAC loops 			; Store the new loop count

	; Check the loop condition
	JMPZ end 			; End the program after enough loops
	JMP loop 			; Continue the loop

; End program
end: 
	HALT 				; Halt the program